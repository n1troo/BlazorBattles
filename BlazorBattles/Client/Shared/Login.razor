@inject ILocalStorageService _localStorageService;
@inject AuthenticationStateProvider _authentication;

Please log in  below or register <a href="register">Register here!</a>

<EditForm Model="_userLogin" OnValidSubmit="HandlerLogin">
    <DataAnnotationsValidator/>

    <div class="form-group">
        <label for="userName">Username</label>
        <InputText @bind-Value="_userLogin.UserName" id="userName" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText type="password" @bind-Value="_userLogin.Password" id="password" class="form-control"></InputText>
    </div>
    <ValidationSummary/>
    <button class="btn btn-success" type="submit">Submit</button>
</EditForm>

@code {
    //private bool isAntenticated = false;
    private UserLogin _userLogin = new UserLogin();


    private async void HandlerLogin()
    {
    // isAntenticated = true;
    // Console.WriteLine($"{_userLogin.UserName} - {_userLogin.Password}");
        await _localStorageService.SetItemAsync<bool>("isAuthenticated", true);
        await _authentication.GetAuthenticationStateAsync();
    }
}