@page "/register"
@inject IUnitService _unitService
@inject IJSRuntime _js
<h3>Register</h3>

<EditForm Model="_user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label for="email" class="requied">Email</label>
        <InputText @bind-Value="_user.Email" id="email" class="form-control"></InputText>
        <ValidationMessage For="() => _user.Email"/>
    </div>
    <div class="form-group">
        <label for="username">UserName</label>
        <InputText id="username" @bind-Value="_user.UserName" class="form-control"></InputText>
        <ValidationMessage For="() => _user.UserName"/>
    </div>
    <div class="form-group">
        <label for="password" class="requied">Password</label>
        <InputText id="password" @bind-Value="_user.Password" type="password" class="form-control"></InputText>
        <ValidationMessage For="() => _user.Password"/>
    </div>
    <div class="form-group">
        <label for="confirmpassword">Password confirm</label>
        <InputText id="confirmpassword" @bind-Value="_user.ConfirmPassword" type="password" class="form-control"></InputText>
        <ValidationMessage For="() => _user.ConfirmPassword"/>
    </div>
    <div class="form-group">
        <label for="bio">Bio:</label>
        <InputText id="bio" @bind-Value="_user.Bio" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="startunit">StartUnit</label>
        <InputSelect id="startunit" @bind-Value="_user.StarUnitId" class="form-control">
            @foreach (var unit in _unitService.Units)
            {
                <option value="@unit.Id">@unit.Titie</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="date">Data</label>
        <InputDate id="date" @bind-Value="_user.DateOfBirth" class="form-control"></InputDate>
    </div>
    <div class="form-group">
        <label for="banans">Bana count</label>
        <InputNumber id="banans" @bind-Value="_user.Bananas" class="form-control"></InputNumber>
        <ValidationMessage For="() => _user.Bananas"/>
    </div>
    <div class="form-check">
        <InputCheckbox id="confirmed" @bind-Value="_user.isConfirmed" class="form-check-input"></InputCheckbox>
        <label for="confirmed" class="form-check-label">Confirmed</label>
        <ValidationMessage For="() => _user.isConfirmed"/>
    </div>
    <button class="btn btn-success" type="submit">Register me!</button>
</EditForm>



@code {
    UserRegister _user = new UserRegister();

    void HandleRegistration()
    {
        _js.InvokeVoidAsync("console.log()",_user);
    }

}